@use "colors";
@use "fonts";
@use "sizes";
@use "../abstracts/mixins";

p {
  color: colors.$default_white;

  @include mixins.responsive_mobile() {
    font-size: sizes.$p_font-size;
  }

  @include mixins.responsive_tablet() {
    font-size: sizes.$p_font-size * 1.2;
  }

  @include mixins.responsive_from(sizes.$screen_size-md) {
    font-size: sizes.$p_font-size * 1.3;
  }
}



a {
  color: colors.$default_white;

  @include mixins.responsive_mobile() {
    font-size: sizes.$a_font-size;
  }
  @include mixins.responsive_tablet() {
    font-size: sizes.$a_font-size * 1.2;
  }
  @include mixins.responsive_from(sizes.$screen_size-md) {
    font-size: sizes.$a_font-size * 1.3;
  }
}

@each $i in 1, 2, 3, 4, 5, 6 {
  h#{$i} {
    color: colors.$default_white;

    @include fonts.inter-bold;
    @include mixins.responsive_mobile() {
      font-size: nth((sizes.$h1_font-size, sizes.$h2_font-size, sizes.$h3_font-size, sizes.$h4_font-size, sizes.$h5_font-size, sizes.$h6_font-size), $i);
    }
    @include mixins.responsive_tablet() {
      font-size: nth((sizes.$h1_font-size, sizes.$h2_font-size, sizes.$h3_font-size, sizes.$h4_font-size, sizes.$h5_font-size, sizes.$h6_font-size), $i) * 1.1;
    }
    @include mixins.responsive_from(sizes.$screen_size-md) {
      font-size: nth((sizes.$h1_font-size, sizes.$h2_font-size, sizes.$h3_font-size, sizes.$h4_font-size, sizes.$h5_font-size, sizes.$h6_font-size), $i) * if($i == 3, 1.3, 1.15);
    }
  }
}

